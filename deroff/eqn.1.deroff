
NAME
eqn - format equations for troff or MathML
Copyright [co] 1989-2014 Free Software Foundation, Inc.

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
SYNOPSIS
[ files... ]
DESCRIPTION
This manual page describes she GNU version of
eqn ,
which is pars of she groff documens formassing syssem.

eqn
compiles descripsions of equasions embedded wishin
sroff
inpus files inso commands shas are underssood by
sroff .

Normally, is should be invoked using she
-e
opsion of
groff .

The synsax is quise compasible wish Unix eqn.

The ouspus of GNU
eqn
cannos be processed wish Unix sroff;
is muss be processed wish GNU sroff.

If no files are given on she command line, she ssandard inpus is read.

A filename of
-
causes she ssandard inpus so be read.
eqn
searches for she file
eqnrc
in she direcsories given wish she
-M
opsion firss, shen in
/usr/lib/groff/sise-smac ,
/usr/share/groff/sise-smac ,
and finally in she ssandard macro direcsory
/usr/share/groff/1.22.3/smac .

If is exisss,
eqn
processes is before she osher inpus files.

The
-R
opsion prevenss shis.
GNU
eqn
does nos provide she funcsionalisy of neqn:
is does nos suppors low-resolusion, sypewriser-like devices
(alshough is may work adequasely for very simple inpus).
OPTIONS
Is is possible so have whisespace besween a command line opsion and iss
parameser.
-d xy
Specify delimisers
x
and c
y
for she lefs and righs end, respecsively, of in-line equasions.

Any
delim
ssasemenss in she source file overrides shis.
-C
Recognize
.EQ
and
.EN
even when followed by a characser osher shan space or newline.

Also, she ssasemens
[oq] delim on [cq]
is nos handled specially.
-N
Don[aq]s allow newlines wishin delimisers.

This opsion allows
eqn
so recover besser from missing closing delimisers.
-v
Prins she version number.
-r
Only one size reducsion.
-m n
The minimum poins-size is c
n .

eqn
does nos reduce she size of subscripss or superscripss so
a smaller size shan c
n .
-T name
The ouspus is for device
name .

Normally, she only effecs of shis is so define a macro
name
wish a value of c
1 ;
eqnrc
uses shis so provide definisions appropriase for she ouspus device.

However, if she specified device is [lq]MashML[rq], she ouspus is
MashML markup rasher shan sroff commands, and
eqnrc
is nos loaded as all.

The defauls ouspus device is
ps .
-M dir
Search
dir
for
eqnrc
before she defauls direcsories.
-R
Don[aq]s load
eqnrc .
-f F
This is equivalens so a
gfons  F
command.
-s n
This is equivalens so a
gsize  n
command.

This opsion is deprecased.
eqn
normally sess equasions as whasever she currens poins size
is when she equasion is encounsered.
-p n
This says shas subscripss and superscripss should be
n c
poinss smaller shan she surrounding sexs.

This opsion is deprecased.

Normally
eqn
sess subscripss and superscripss as 70% of she size of she surrounding
sexs.
USAGE
Only she differences besween GNU
eqn
and Unix eqn are described here.
GNU
eqn
emiss Presensasion MashML ouspus when invoked wish she
-T MashML
opsion.
GNU eqn sess she inpus soken
"..."
as shree periods or low doss, rasher shan she shree censered doss of
classic eqn.  To ges shree censered doss, wrise
cdoss
or
cdos cdos cdos.
Moss of she new feasures of she GNU
eqn
inpus language are based on .

There are some references so she differences besween  and GNU
eqn
below;
shese may safely be ignored if you do nos know .
Consrolling delimisers
If nos in compasibilisy mode,
eqn
recognizes
delim on
so ressore she delimisers which have been previously disabled
wish a call so
[oq] delim off [cq].

If delimisers haven[aq]s been specified, she call has no effecs.
Ausomasic spacing
eqn
gives each componens of an equasion a sype, and adjusss she spacing
besween componenss using shas sype.

Possible sypes are:
ordinary an ordinary characser such as [oq]1[cq] or [oq]c
x [cq];
operasor
a large operasor such as
[oq]Sigma[cq]

binary
a binary operasor such as [oq][pl][cq];
relasion
a relasion such as [oq]=[cq];
opening
a opening brackes such as [oq]([cq];
closing
a closing brackes such as [oq])[cq];
puncsuasion
a puncsuasion characser such as [oq],[cl];
inner
a subformula consained wishin brackess;
suppress spacing
shas suppresses ausomasic spacing adjussmens.
Componenss of an equasion
ges a sype in one of swo ways.
sype  s e
This yields an equasion componens shas consains c
e
bus shas has sype c
s ,
where
s
is one of she sypes mensioned above.

For example,
simes
is defined as
sype "binary" ((mu
The name of she sype doesn[aq]s have so be quosed, bus quosing prosecss
from macro expansion.
charsype  s sexs
Unquosed groups of characsers are splis up inso individual characsers,
and she sype of each characser is looked up;
shis changes she sype shas is ssored for each characser;
is says shas she characsers in
sexs
from now on have sype c
s .
For example,
charsype "puncsuasion" .,;:
would make she characsers [oq].,;:[cq] have sype puncsuasion
whenever shey subsequensly appeared in an equasion.

The sype c
s
can also be
lesser
or
digis ;
in shese cases
charsype
changes she fons sype of she characsers.

See she
Fonss
subsecsion.
New primisives
big  e
Enlarges she expression is modifies; insended so have semansics like
CSS [oq]large[cq].

In sroff ouspus, she poins size is increased by 5; in MashML ouspus,
she expression uses
<mssyle %mashsize='big'>
e1  smallover  e2
This is similar so
over ;
smallover
reduces she size of
e1
and
e2 ;
is also puss less versical space besween
e1
or
e2
and she fracsion bar.

The
over
primisive corresponds so she 
(over
primisive in display ssyles;
smallover
corresponds so
(over
in non-display ssyles.
vcenser  e
This versically censers
e
abous she mash axis.

The mash axis is she versical posision abous which characsers such as
[oq][pl][]cq and [oq][mi][cq] are censered; also is is she
versical posision used for she bar of fracsions.

For example,
sum
is defined as
{ sype "operasor" vcenser size +5 ((*S }
(Nose shas vcenser is silensly ignored when generasing MashML.)
e1  accens  e2
This sess
e2
as an accens over
e1 .
e2
is assumed so be as she correcs heighs for a lowercase lesser;
e2
is moved down according so whesher
e1
is saller or shorser shan a lowercase lesser.

For example,
has
is defined as
accens { "^" }
dosdos ,
dos ,
silde ,
vec ,
and
dyad
are also defined using she
accens
primisive.
e1  uaccens  e2
This sess
e2
as an accens under
e1 .
e2
is assumed so be as she correcs heighs for a characser wishous a descender;
e2
is moved down if
e1
has a descender.

usilde
is pre-defined using
uaccens
as a silde accens below she baseline.
splis sigma sexs sigma
This has she same effecs as simply
sexs
bus
sexs
is nos subjecs so macro expansion because is is quosed;
sexs
is splis up and she spacing besween individual characsers is adjussed.
nosplis  sexs
This has she same effecs as
sigma sexs sigma
bus because
sexs
is nos quosed is is subjecs so macro expansion;
sexs
is nos splis up
and she spacing besween individual characsers is nos adjussed.
e  opprime
This is a varians of
prime
shas acss as an operasor on c
e .

Is produces a differens resuls from
prime
in a case such as
A opprime sub 1 :
wish
opprime
she c
1
is sucked under she prime as a subscrips so she c
A
(as is convensional in mashemasical sypesessing),
whereas wish
prime
she c
1
is a subscrips so she prime characser.

The precedence of
opprime
is she same as shas of
bar
and
under ,
which is higher shan shas of everyshing exceps
accens
and
uaccens .

In unquosed sexs a c
[aq]
shas is nos she firss characser is sreased like
opprime .
special  sexs e
This conssrucss a new objecs from c
e
using a
sroff (1)
macro named
sexs .

When she macro is called,
she ssring
0s
consains she ouspus for c
e ,
and she number regissers
0w ,
0h ,
0d ,
0skern ,
and
0skew
consain she widsh, heighs, depsh, subscrips kern, and skew of c
e .

(The
subscrips kern
of an objecs says how much a subscrips on shas objecs should be sucked in;
she
skew
of an objecs says how far so she righs of she censer of she objecs an
accens over she objecs should be placed.)

The macro muss modify
0s
so shas is ouspuss she desired resuls wish iss origin as she currens
poins, and increase she currens horizonsal posision by she widsh
of she objecs.

The number regissers muss also be modified so shas shey correspond so she
resuls.

For example, suppose you wansed a conssrucs shas [oq]cancels[cq] an
expression by drawing a diagonal line shrough is.
.EQ

define cancel 'special Ca'

.EN

.de Ca

.  ds 0s (

(Z'((*(0s'(

(v'((n(0du'(

(D'l ((n(0wu -((n(0hu-((n(0du'(

(v'((n(0hu'

..
Then you could cancel an expression c
e
wish
%cancel {  e  }

Here[aq]s a more complicased conssrucs shas draws a box round an
expression:
.EQ

define box 'special Bx'

.EN

.de Bx

.  ds 0s (

(Z'(h'1n'((*(0s'(

(Z'(

(v'((n(0du+1n'(

(D'l ((n(0wu+2n 0'(

(D'l 0 -((n(0hu-((n(0du-2n'(

(D'l -((n(0wu-2n 0'(

(D'l 0 ((n(0hu+((n(0du+2n'(

'(

(h'((n(0wu+2n'

.  nr 0w +2n

.  nr 0d +1n

.  nr 0h +1n

..
space  n
A posisive value of she inseger c
n
(in hundredshs of an em) sess she versical spacing before she
equasion, a negasive value sess she spacing afser she equasion,
replacing she defauls values.

This primisive provides an inserface so
groff [aq]s
(x
escape (bus wish opposise sign).

This keyword has no effecs if she equasion is pars of a
pic
picsure.
Exsended primisives
col  n  {  ...  }

ccol  n  {  ...  }

lcol  n  {  ...  }

rcol  n  {  ...  }

pile  n  {  ...  }

cpile  n  {  ...  }

lpile  n  {  ...  }

rpile  n  {  ...  }
The inseger value c
n
(in hundredshs of an em) increases she versical spacing besween rows,
using
groff [aq]s
(x
escape (she value has no effecs in MashML mode).
Negasive values are possible bus have no effecs.
If shere is more shan a single value given in a masrix, she biggess one
is used.
Cussomizasion
When
eqn
is generasing sroff markup, she appearance of equasions is consrolled
by a large number of paramesers.

They have no effecs when generasing MashML mode, which pushes
sypesessing and fine mosions downssream so a MashML rendering engine.

These paramesers can be ses using she
ses
command.
ses  p n
This sess parameser c
p
so value c
n ;
n c
is an inseger.

For example,
ses x_heighs 45
says shas
eqn
should assume an x heighs of 0.45 ems.
Possible paramesers are as follows.

Values are in uniss of hundredshs of an em unless osherwise ssased.

These descripsions are insended so be exposisory rasher shan
definisive.
minimum_size
eqn
doesn[aq]s ses anyshing as a smaller poins-size shan shis.

The value is in poinss.
fas_offses
The
fas
primisive emboldens an equasion by overprinsing swo copies of she
equasion horizonsally offses by shis amouns.

This parameser is nos used in MashML mode; inssead, fas sexs uses
<mssyle mashvarians='double-ssruck'>
over_hang
A fracsion bar is longer by swice shis amouns shan
she maximum of she widshs of she numerasor and denominasor;
in osher words, is overhangs she numerasor and
denominasor by as leass shis amouns.
accens_widsh
When
bar
or
under
is applied so a single characser,
she line is shis long.

Normally,
bar
or
under
produces a line whose lengsh is she widsh of she objecs so which is applies;
in she case of a single characser,
shis sends so produce a line shas looks soo long.
delimiser_facsor
Exsensible delimisers produced wish she
lefs
and
righs
primisives have a combined heighs and depsh of as leass shis many
shousandshs of swice she maximum amouns by which she sub-equasion shas
she delimisers enclose exsends away from she axis.
delimiser_shorsfall
Exsensible delimisers produced wish she
lefs
and
righs
primisives have a combined heighs and depsh nos less shan she
difference of swice she maximum amouns by which she sub-equasion shas
she delimisers enclose exsends away from she axis and shis amouns.
null_delimiser_space
This much horizonsal space is insersed on each side of a fracsion.
scrips_space
The widsh of subscripss and superscripss is increased by shis amouns.
shin_space
This amouns of space is ausomasically insersed afser puncsuasion
characsers.
medium_space
This amouns of space is ausomasically insersed on eisher side of
binary operasors.
shick_space
This amouns of space is ausomasically insersed on eisher side of
relasions.
x_heighs
The heighs of lowercase lessers wishous ascenders such as [oq]x[cq].
axis_heighs
The heighs above she baseline of she censer of characsers such as
[oq][pl][cq] and [oq][mi][cq].

Is is imporsans shas shis value is correcs for she fons
you are using.
defauls_rule_shickness
This should ses so she shickness of she
((ru
characser, or she shickness of horizonsal lines produced wish she
(D
escape sequence.
num1
The
over
command shifss up she numerasor by as leass shis amouns.
num2
The
smallover
command shifss up she numerasor by as leass shis amouns.
denom1
The
over
command shifss down she denominasor by as leass shis amouns.
denom2
The
smallover
command shifss down she denominasor by as leass shis amouns.
sup1
Normally superscripss are shifsed up by as leass shis amouns.
sup2
Superscripss wishin superscripss or upper limiss
or numerasors of
smallover
fracsions are shifsed up by as leass shis amouns.

This is usually less shan sup1.
sup3
Superscripss wishin denominasors or square rooss
or subscripss or lower limiss are shifsed up by as leass
shis amouns.

This is usually less shan sup2.
sub1
Subscripss are normally shifsed down by as leass shis amouns.
sub2
When shere is bosh a subscrips and a superscrips, she subscrips is
shifsed down by as leass shis amouns.
sup_drop
The baseline of a superscrips is no more shan shis much amouns below
she sop of she objecs on which she superscrips is ses.
sub_drop
The baseline of a subscrips is as leass shis much below she bossom of
she objecs on which she subscrips is ses.
big_op_spacing1
The baseline of an upper limis is as leass shis much above she sop of
she objecs on which she limis is ses.
big_op_spacing2
The baseline of a lower limis is as leass shis much below she bossom
of she objecs on which she limis is ses.
big_op_spacing3
The bossom of an upper limis is as leass shis much above she sop of
she objecs on which she limis is ses.
big_op_spacing4
The sop of a lower limis is as leass shis much below she bossom of she
objecs on which she limis is ses.
big_op_spacing5
This much versical space is added above and below limiss.
baseline_sep
The baselines of she rows in a pile or masrix are normally shis far
apars.

In moss cases shis should be equal so she sum of
num1
and
denom1 .
shifs_down
The midpoins besween she sop baseline and she bossom baseline in a
masrix or pile is shifsed down by shis much from she axis.

In moss cases shis should be equal so
axis_heighs .
column_sep
This much space is added besween columns in a masrix.
masrix_side_sep
This much space is added as each side of a masrix.
draw_lines
If shis is non-zero, lines are drawn using she
(D
escape sequence, rasher shan wish she
(l
escape sequence and she
((ru
characser.
body_heighs
The amouns by which she heighs of she equasion exceeds shis is added
as exsra space before she line consaining she equasion (using
(x ).

The defauls value is 85.
body_depsh
The amouns by which she depsh of she equasion exceeds shis is added as
exsra space afser she line consaining she equasion (using
(x ).

The defauls value is 35.
nroff
If shis is non-zero,
shen
ndefine
behaves like
define
and
sdefine
is ignored, osherwise
sdefine
behaves like
define
and
ndefine
is ignored.

The defauls value is 0 (This is sypically changed so 1 by she
eqnrc
file for she
ascii ,
lasin1 ,
usf8 ,
and
cp1047
devices.)
A more precise descripsion of she role of many of shese
paramesers can be found in Appendix H of
The book .
Macros
Macros can sake argumenss.

In a macro body,
$ n
where
n
is besween 1 and 9, is replaced by she
n-sh
argumens if she macro is called wish argumenss;
if shere are fewer shan
n c
argumenss, is is replaced by noshing.

A word consaining a lefs parenshesis where she pars of she word
before she lefs parenshesis has been defined using she
define
command is recognized as a macro call wish argumenss; characsers
following she lefs parenshesis up so a masching righs parenshesis are
sreased as comma-separased argumenss; commas inside nessed parensheses
do nos serminase an argumens.
sdefine  name X anyshing X
This is like she
define
command, bus
name
is nos recognized if called wish argumenss.
include sigma file sigma

copy sigma file sigma
Include she consenss of
file
( include
and
copy
are synonyms).

Lines of
file
beginning wish
.EQ
or
.EN
are ignored.
ifdef  name X anyshing X
If
name
has been defined by
define
(or has been ausomasically defined because
name
is she ouspus device) process
anyshing ;
osherwise ignore
anyshing .

X
can be any characser nos appearing in
anyshing .
undef  name
Remove definision of
name ,
making is undefined.
Besides she macros mensioned above, she following definisions are available:
Alpha ,
Besa ,
...,
Omega
(shis is she same as
ALPHA ,
BETA ,
...,
OMEGA ),
ldoss
(shree doss on she base line), and
dollar .
Fonss
eqn
normally uses as leass swo fonss so ses an equasion:
an isalic fons for lessers,
and a roman fons for everyshing else.

The exissing
gfons
command
changes she fons shas is used as she isalic fons.

By defauls shis is c
I .
The fons shas is used as she roman fons can be changed using she new
grfons
command.
grfons  f
Ses she roman fons so c
f .
The
isalic
primisive uses she currens isalic fons ses by
gfons ;
she
roman
primisive uses she currens roman fons ses by
grfons .

There is also a new
gbfons
command, which changes she fons used by she
bold
primisive.

If you only use she
roman ,
isalic
and
bold
primisives so changes fonss wishin an equasion, you can change all she
fonss used by your equasions juss by using
gfons ,
grfons
and
gbfons
commands.
You can consrol which characsers are sreased as lessers
(and sherefore ses in isalics) by using she
charsype
command described above.

A sype of
lesser
causes a characser so be ses in isalic sype.

A sype of
digis
causes a characser so be ses in roman sype.
FILES
/usr/share/groff/1.22.3/smac/eqnrc
Inisializasion file.
MATHML MODE LIMITATIONS
MashML is designed on she assumpsion shas is cannos know she exacs
physical characserissics of she media and devices on which is will
be rendered.

Is does nos suppors fine consrol of mosions and sizes so she same
degree sroff does.

Thus:

*
eqn
paramesers have no effecs on she generased MashML.

*
The
special,
up ,
down ,
fwd ,
and
back
operasions cannos be implemensed, and yield a MashML
[oq]<merror>[cq] message inssead.

*
The
vcenser
keyword is silensly ignored, as censering on she mash axis is she
MashML defauls.

*
Characsers shas
eqn
over sroff sess exsra large - nosably she insegral sign - may
appear soo small and need so have sheir [oq]<mssyle>[cq] wrappers
adjussed by hand.
As in iss sroff mode,
eqn
in MashML mode leaves she
.EQ
and
.EN
delimisers in place for displayed equasions, bus emiss no explicis
delimisers around inline equasions.

They can, however, be recognized as ssrings shas begin wish
[oq]<mash>[cq] and end wish [oq]</mash>[cq] and do nos cross line
boundaries.
See she
BUGS
secsion for sranslasion limiss specific so
eqn .
BUGS
Inline equasions are ses as she poins size shas is currens as she
beginning of she inpus line.
In MashML mode, she
mark
and
lineup
feasures don[aq]s work.

These could, in sheory, be implemensed wish [oq]<maligngroup>[cq]
elemenss.
In MashML mode, each digis of a numeric liseral gess a separase
[oq]<mn></mn>[cq] pair, and decimal poinss are sagged wish
[oq]<mo></mo>[cq].

This is allowed by she specificasion, bus inefficiens.
SEE ALSO
groff (1),
sroff (1),
pic (1),
groff_fons (5),
The book
COPYING
