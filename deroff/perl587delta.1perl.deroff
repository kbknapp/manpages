
{
NAME
perl587delta   what is new for perl v5.8.7
DESCRIPTION

This document describes differences between the 5.8.6 release and
the 5.8.7 release.
Incompatible Changes

There are no changes incompatible with 5.8.6.
Core Enhancements

Unicode Character Database 4.1.0

The copy of the Unicode Character Database included in Perl 5.8 has
been updated to 4.1.0 from 4.0.1. See
<http://www.unicode.org/versions/Unicode4.1.0/#NotableChanges> for the
notable changes.
suidperl less insecure

A pair of exploits in suidperl(fR involving debugging code have been closed.

For new projects the core perl team strongly recommends that you use
dedicated, single purpose security tools such as sudo(fR in preference to
suidperl(fR.
Optional site customization script

The perl interpreter can be built to allow the use of a site customization
script. By default this is not enabled, to be consistent with previous perl
releases. To use this, add ( Dusesitecustomize(fR to the command line flags
when running the Configure(fR script. See also ( f in perlrun.
Config.pm(fR is now about 3K rather than 32K, with the infrequently used
code and %Config values loaded on demand. This is transparent to the
programmer, but means that most code will save parsing and loading 29K of
script (for example, code that uses File::Find(fR).
Modules and Pragmata

o 4
B upgraded to version 1.09
o 4
base upgraded to version 2.07
o 4
bignum upgraded to version 0.17
o 4
bytes upgraded to version 1.02
o 4
Carp upgraded to version 1.04
o 4
CGI upgraded to version 3.10
o 4
Class::ISA upgraded to version 0.33
o 4
Data::Dumper upgraded to version 2.121_02
o 4
DB_File upgraded to version 1.811
o 4
Devel::PPPort upgraded to version 3.06
o 4
Digest upgraded to version 1.10
o 4
Encode upgraded to version 2.10
o 4
FileCache upgraded to version 1.05
o 4
File::Path upgraded to version 1.07
o 4
File::Temp upgraded to version 0.16
o 4
IO::File upgraded to version 1.11
o 4
IO::Socket upgraded to version 1.28
o 4
Math::BigInt upgraded to version 1.77
o 4
Math::BigRat upgraded to version 0.15
o 4
overload upgraded to version 1.03
o 4
PathTools upgraded to version 3.05
o 4
Pod::HTML upgraded to version 1.0503
o 4
Pod::Perldoc upgraded to version 3.14
o 4
Pod::LaTeX upgraded to version 0.58
o 4
Pod::Parser upgraded to version 1.30
o 4
Symbol upgraded to version 1.06
o 4
Term::ANSIColor upgraded to version 1.09
o 4
Test::Harness upgraded to version 2.48
o 4
Test::Simple upgraded to version 0.54
o 4
Text::Wrap upgraded to version 2001.09293, to fix a bug when wrap() was
called with a non space separator.
o 4
threads::shared upgraded to version 0.93
o 4
Time::HiRes upgraded to version 1.66
o 4
Time::Local upgraded to version 1.11
o 4
Unicode::Normalize upgraded to version 0.32
o 4
utf8 upgraded to version 1.05
o 4
Win32 upgraded to version 0.24, which provides Win32::GetFileVersion
Utility Changes

find2perl enhancements

find2perl(fR has new options ( iname(fR, ( path(fR and ( ipath(fR.
Performance Enhancements

The internal pointer mapping hash used during ithreads cloning now uses an
arena for memory allocation. In tests this reduced ithreads cloning time by
about 10%.
Installation and Configuration Improvements

o 4
The Win32 dmake makefile.mk has been updated to make it compatible
with the latest versions of dmake.
o 4
PERL_MALLOC(fR, DEBUG_MSTATS(fR, PERL_HASH_SEED_EXPLICIT(fR and NO_HASH_SEED(fR
should now work in Win32 makefiles.
Selected Bug Fixes

o 4
The socket() function on Win32 has been fixed so that it is able to use
transport providers which specify a protocol of 0 (meaning any protocol
is allowed) once more.  (This was broken in 5.8.6, and typically caused
the use of ICMP sockets to fail.)
o 4
Another obscure bug involving substr(fR and UTF 8 caused by bad internal
offset caching has been identified and fixed.
o 4
A bug involving the loading of UTF 8 tables by the regexp engine has been
fixed   code such as "(x{100}" =~ /[[:print:]]/(fR will no longer give
corrupt results.
o 4
Case conversion operations such as uc(fR on a long Unicode string could
exhaust memory. This has been fixed.
o 4
index(fR/rindex(fR were buggy for some combinations of Unicode and
non Unicode data. This has been fixed.
o 4
read(fR (and presumably sysread(fR) would expose the UTF 8 internals when
reading from a byte oriented file handle into a UTF 8 scalar. This has
been fixed.
o 4
Several pack(fR/unpack(fR bug fixes:

o 4
Checksums with b(fR or B(fR formats were broken.
o 4
unpack(fR checksums could overflow with the C(fR format.
o 4
U0(fR and C0(fR are now scoped to ()(fR pack(fR sub templates.
o 4
Counted length prefixes now don't change C0(fR/U0(fR mode.
o 4
pack(fR Z0(fR used to destroy the preceding character.
o 4
P(fR/p(fR pack(fR formats used to only recognise literal undef(fR
o 4
Using closures with ithreads could cause perl to crash. This was due to
failure to correctly lock internal OP structures, and has been fixed.
o 4
The return value of close(fR now correctly reflects any file errors that
occur while flushing the handle's data, instead of just giving failure if
the actual underlying file close operation failed.
o 4
not() || 1(fR used to segfault. not()(fR now behaves like not(0), which was
the pre 5.6.0 behaviour.
o 4
h2ph(fR has various enhancements to cope with constructs in header files that
used to result in incorrect or invalid output.
New or Changed Diagnostics

There is a new taint error, %ENV is aliased to %s. This error is thrown
when taint checks are enabled and when WENV has been aliased, so that
%ENV has no env magic anymore and hence the environment cannot be verified
as taint free.

The internals of pack(fR and unpack(fR have been updated. All legitimate
templates should work as before, but there may be some changes in the error
reported for complex failure cases. Any behaviour changes for non error cases
are bugs, and should be reported.
Changed Internals

There has been a fair amount of refactoring of the C(fR source code, partly to
make it tidier and more maintainable. The resulting object code and the
perl(fR binary may well be smaller than 5.8.6, and hopefully faster in some
cases, but apart from this there should be no user detectable changes.

${^UTF8LOCALE}(fR has been added to give perl space access to PL_utf8locale(fR.

The size of the arenas used to allocate SV heads and most SV bodies can now
be changed at compile time. The old size was 1008 bytes, the new default size
is 4080 bytes.
Known Problems

Unicode strings returned from overloaded operators can be buggy. This is a
long standing bug reported since 5.8.6 was released, but we do not yet have
a suitable fix for it.
Platform Specific Problems

On UNICOS, lib/Math/BigInt/t/bigintc.t hangs burning CPU.
ext/B/t/bytecode.t and ext/Socket/t/socketpair.t both fail tests.
These are unlikely to be resolved, as our valiant UNICOS porter's last
Cray is being decommissioned.
Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://bugs.perl.org.  There may also be
information at http://www.perl.org, the Perl Home Page.

If you believe you have an unreported bug, please run the perlbug
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of perl  V(fR, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.  You can browse and search
the Perl 5 bugs at http://bugs.perl.org/
SEE ALSO

The Changes file for exhaustive details on what changed.

The INSTALL file for how to build Perl.

The README file for general stuff.

The Artistic and Copying files for copyright information.

