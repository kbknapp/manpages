
{
NAME
perl5122delta   what is new for perl v5.12.2
DESCRIPTION

This document describes differences between the 5.12.1 release and
the 5.12.2 release.

If you are upgrading from an earlier major version, such as 5.10.1,
first read perl5120delta, which describes differences between 5.10.1
and 5.12.0, as well as perl5121delta, which describes earlier changes
in the 5.12 stable release series.
Incompatible Changes

There are no changes intentionally incompatible with 5.12.1. If any exist, they
are bugs and reports are welcome.
Core Enhancements

Other than the bug fixes listed below, there should be no user visible
changes to the core language in this release.
Modules and Pragmata

New Modules and Pragmata

This release does not introduce any new modules or pragmata.
Pragmata Changes

In the previous release, no VERSION;(fR statements triggered a bug
which could cause feature bundles to be loaded and strict mode to
be enabled unintentionally.
Updated Modules
Upgraded from version 1.16 to 1.17.

Carp now detects incomplete caller()
overrides and avoids using bogus @DB::args. To provide backtraces, Carp
relies on particular behaviour of the caller built in. Carp now detects
if other code has overridden this with an incomplete implementation, and
modifies its backtrace accordingly. Previously incomplete overrides would
cause incorrect values in backtraces (best case), or obscure fatal errors
(worst case)

This fixes certain cases of Bizarre copy of ARRAY(fR caused by modules
overriding caller()(fR incorrectly.
A patch to cpanp run perl has been backported from CPANPLUS 0.9004. This
resolves RT #55964 <http://rt.cpan.org/Public/Bug/Display.html?id=55964>
and RT #57106 <http://rt.cpan.org/Public/Bug/Display.html?id=57106>, both
of which related to failures to install distributions that use
Module::Install::DSL(fR.
A regression which caused a failure to find CORE::GLOBAL::glob(fR after
loading File::Glob(fR to crash has been fixed.  Now, it correctly falls back
to external globbing via pp_glob(fR.
File::Copy::copy(FILE, DIR)(fR is now documented.
Upgraded from version 3.31 to 3.31_01.

Several portability fixes were made in File::Spec::VMS(fR: a colon is now
recognized as a delimiter in native filespecs; caret escaped delimiters are
recognized for better handling of extended filespecs; catpath()(fR returns
an empty directory rather than the current directory if the input directory
name is empty; abs2rel()(fR properly handles Unix style input.
Utility Changes

o 4
perlbug now always gives the reporter a chance to change the email address it
guesses for them.
o 4
perlbug should no longer warn about uninitialized values when using the ( d(fR
and ( v(fR options.
Changes to Existing Documentation

o 4
The existing policy on backward compatibility and deprecation has
been added to perlpolicy, along with definitions of terms like
deprecation.
o 4
srand in perlfunc's usage has been clarified.
o 4
The entry for die in perlfunc was reorganized to emphasize its
role in the exception mechanism.
o 4
Perl's INSTALL file has been clarified to explicitly state that Perl
requires a C89 compliant ANSI C Compiler.
o 4
IO::Socket's getsockopt()(fR and setsockopt()(fR have been documented.
o 4
alarm()'s inability to interrupt blocking IO on Windows has been documented.
o 4
Math::TrulyRandom hasn't been updated since 1996 and has been removed
as a recommended solution for random number generation.
o 4
perlrun has been updated to clarify the behaviour of octal flags to perl.
o 4
To ease user confusion, $# and $W, two special variables that were
removed in earlier versions of Perl have been documented.
o 4
The version of perlfaq shipped with the Perl core has been updated from the
official FAQ version, which is now maintained in the briandfoy/perlfaq(fR
branch of the Perl repository at <git://perl5.git.perl.org/perl.git>.
Installation and Configuration Improvements

Configuration improvements

o 4
The d_u32align(fR configuration probe on ARM has been fixed.
Compilation improvements

o 4
An "incompatible operand types(fR" error in ternary expressions when building
with clang(fR has been fixed.
o 4
Perl now skips setuid File::Copy(fR tests on partitions it detects to be mounted
as nosuid(fR.
Selected Bug Fixes

o 4
A possible segfault in the T_PRTOBJ(fR default typemap has been fixed.
o 4
A possible memory leak when using caller() to set
@DB::args has been fixed.
o 4
Several memory leaks when loading XS modules were fixed.
o 4
unpack()(fR now handles scalar context correctly for %32H and %32u,
fixing a potential crash.  split()(fR would crash because the third item
on the stack wasn't the regular expression it expected.  unpack("%2H",
...)(fR would return both the unpacked result and the checksum on the stack,
as would unpack("%2u", ...)(fR.
[perl #73814] <http://rt.perl.org/rt3/Ticket/Display.html?id=73814>
o 4
Perl now avoids using memory after calling free()(fR in pp_require
when there are CODEREFs in @INC.
o 4
A bug that could cause "Unknown error(fR messages when
(f(CWcall_sv(code, G_EVAL)(fR" is called from an XS destructor has been fixed.
o 4
The implementation of the open $fh, > ($buffer(fR feature
now supports get/set magic and thus tied buffers correctly.
o 4
The pp_getc(fR, pp_tell(fR, and pp_eof(fR opcodes now make room on the
stack for their return values in cases where no argument was passed in.
o 4
When matching unicode strings under some conditions inappropriate backtracking would
result in a Malformed UTF 8 character (fatal)(fR error. This should no longer occur.
See  [perl #75680] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=75680>
Platform Specific Notes

AIX

o 4
README.aix has been updated with information about the XL C/C .1v'++.1v'suite.
Windows

o 4
When building Perl with the mingw64 x64 cross compiler incpath(fR,
libpth(fR, ldflags(fR, lddlflags(fR and ldflags_nolargefiles(fR values
in Config.pm and Config_heavy.pl were not previously being set
correctly because, with that compiler, the include and lib directories
are not immediately below $(CCHOME)(fR.
VMS

o 4
git_version.h is now installed on VMS. This was an oversight in v5.12.0 which
caused some extensions to fail to build.
o 4
Several memory leaks in stat() have been fixed.
o 4
A memory leak in Perl_rename()(fR due to a double allocation has been
fixed.
o 4
A memory leak in vms_fid_to_name()(fR (used by realpath()(fR and
realname()(fR) has been fixed.
Acknowledgements

Perl 5.12.2 represents approximately three months of development since
Perl 5.12.1 and contains approximately 2,000 lines of changes across
100 files from 36 authors.

Perl continues to flourish into its third decade thanks to a vibrant
community of users and developers.  The following people are known to
have contributed the improvements that became Perl 5.12.2:

Abigail, A (uW4/10)'EPhillips, Chas. Owens, Chris 'BinGOs' Williams, Chris Williams,
Craig A. Berry, Curtis Jewell, Dan Dascalescu, David Golden, David
Mitchell, Father Chrysostomos, Florian Ragwitz, George Greer, H.Merijn
Brand, Jan Dubois, Jesse Vincent, Jim Cromie, Karl Williamson, Lars
DXXXXXX XXX, Leon Brocard, Maik Hentsche, Matt S Trout,
Nicholas Clark, Rafael Garcia Suarez, Rainer Tammer, Ricardo Signes,
Salvador Ortiz Garcia, Sisyphus, Slaven Rezic, Steffen Mueller, Tony Cook,
Vincent Pit and Yves Orton.
Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the perlbug
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of perl  V(fR, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5 security report@perl.org. This points to a closed subscription
unarchived mailing list, which includes
all the core committers, who will be able
to help assess the impact of issues, figure out a resolution, and help
co ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on CPAN.
SEE ALSO

The Changes file for an explanation of how to view exhaustive details
on what changed.

The INSTALL file for how to build Perl.

The README file for general stuff.

The Artistic and Copying files for copyright information.

