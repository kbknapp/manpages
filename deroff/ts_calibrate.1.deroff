
NAME
ts_calibrate - A test program to calibrate a touch screen used by tslib.

SYNOPSIS
ts_calibrate

DESCRIPTION

ts_calibrate is used to manually configure tslib's linear filter plugin. It draws crosshairs to the framebuffer to be touched by the user and records expected vs. actual touch contact positions needed to apply the filter and provide a desired touch user experience. It uses the TSLIB_CALIBFILE environment variable to store it's values.
-r, --rotate [value]
Rotate the screen. value is 0 for 0 degree, 1 for 90 degrees (CW), 2 for 180 degrees (upside down) and 3 for 270 degrees (CCW). This value will be added to the calibration config file TSLIB_CALIBFILE and picked up from the linear filter module from there. It can be changed by a linear module parameter.
-t, --min_interval
The time in milliseconds that has to pass before a crosshair is pressed by the user. This may be useful to avoid insanely fast or accidentally wrong taps and thus inaccurate calibration. Default: 0.
-c, --validate
Validate the calibration. Make sure the linear module is configured in ts.conf so that the current calibration is applied. In this mode, crosses are displayed at random locations on screen and touches are evaluated against their positions. In this mode the --loops and --boundary options are available.
-b, --boundary
Validation boundary in pixels. Available only when --validate is used. This defines how strict the validation should be. It's the the distance that an evaluated touch input is allowed to be apart from a cross to still pass the validation. If this boundary is crossed, validation fails. Default: 10.
-l, --loops
Number of loops in validation mode. Available only when --validate is used. This defines how many crosses should be touched and evaluated. Default: 3.
ENVIRONMENT VARIABLES

see ts.conf (5)
SEE ALSO

ts.conf (5),
ts_test (1),
ts_uinput (1)

