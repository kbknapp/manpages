
NAME
systemd-detect-virt - Detect execution in a virtualized environment
SYNOPSIS

systemd-detect-virt [OPTIONS...]
DESCRIPTION

systemd-detect-virt
detects execution in a virtualized environment. It identifies the virtualization technology and can distinguish full machine virtualization from container virtualization.
systemd-detect-virt
exits with a return value of 0 (success) if a virtualization technology is detected, and non-zero (error) otherwise. By default, any type of virtualization is detected, and the options
--container
and
--vm
can be used to limit what types of virtualization are detected.

When executed without
--quiet
will print a short identifier for the detected virtualization technology. The following technologies are currently identified:
Table 1. Known virtualization technologies (both VM, i.e. full hardware virtualization, and container, i.e. shared kernel virtualization)
T{
Type
T}:T{
ID
T}:T{
Product
T}
T{
VM
T}:T{
qemu
T}:T{
QEMU software virtualization, without KVM
T}
:T{
kvm
T}:T{
Linux KVM kernel virtual machine, with whatever software, except Oracle Virtualbox
T}
:T{
zvm
T}:T{
s390 z/VM
T}
:T{
vmware
T}:T{
VMware Workstation or Server, and related products
T}
:T{
microsoft
T}:T{
Hyper-V, also known as Viridian or Windows Server Virtualization
T}
:T{
oracle
T}:T{
Oracle VM VirtualBox (historically marketed by innotek and Sun Microsystems), for legacy and KVM hypervisor
T}
:T{
xen
T}:T{
Xen hypervisor (only domU, not dom0)
T}
:T{
bochs
T}:T{
Bochs Emulator
T}
:T{
uml
T}:T{
User-mode Linux
T}
:T{
parallels
T}:T{
Parallels Desktop, Parallels Server
T}
:T{
bhyve
T}:T{
bhyve, FreeBSD hypervisor
T}
:T{
qnx
T}:T{
QNX hypervisor
T}
T{
Container
T}:T{
openvz
T}:T{
OpenVZ/Virtuozzo
T}
:T{
lxc
T}:T{
Linux container implementation by LXC
T}
:T{
lxc-libvirt
T}:T{
Linux container implementation by libvirt
T}
:T{
systemd-nspawn
T}:T{
systemds minimal container implementation, see systemd-nspawn(1)
T}
:T{
docker
T}:T{
Docker container manager
T}
:T{
rkt
T}:T{
rkt app container runtime
T}
If multiple virtualization solutions are used, only the "innermost" is detected and identified. That means if both machine and container virtualization are used in conjunction, only the latter will be identified (unless
--vm
is passed).
OPTIONS

The following options are understood:

-c, --container

Only detects container virtualization (i.e. shared kernel virtualization).
-v, --vm

Only detects hardware virtualization).
-r, --chroot

Detect whether invoked in a
chroot(2)
environment. In this mode, no output is written, but the return value indicates whether the process was invoked in a
chroot()
environment or not.
--private-users

Detect whether invoked in a user namespace. In this mode, no output is written, but the return value indicates whether the process was invoked inside of a user namespace or not. See
user_namespaces(7)
for more information.
-q, --quiet

Suppress output of the virtualization technology identifier.
--list

Output all currently known and detectable container and VM environments.
-h, --help

Print a short help text and exit.
--version

Print a short version string and exit.

EXIT STATUS

If a virtualization technology is detected, 0 is returned, a non-zero code otherwise.
SEE ALSO

systemd(1),
systemd-nspawn(1),
chroot(2),
namespaces(7)

