'\" t
.\"     Title: ndctl-inject-error
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 1.5.8
.\"      Date: 2019-03-18
.\"    Manual: ndctl Manual
.\"    Source: ndctl
.\"  Language: English
.\"
.TH "NDCTL\-INJECT\-ERROR" "1" "2019-03-18" "ndctl" "ndctl Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
ndctl\-inject\-error \- inject media errors at a namespace offset
.SH "SYNOPSIS"
.sp
.nf
\fIndctl inject\-error\fP <namespace> [<options>]
.fi
.br
.SH "THEORY OF OPERATION"
.sp
The capacity of an NVDIMM REGION (contiguous span of persistent memory)
is accessed via one or more NAMESPACE devices. REGION is the Linux term
for what ACPI and UEFI call a DIMM\-interleave\-set, or a
system\-physical\-address\-range that is striped (by the memory controller)
across one or more memory modules.
.sp
The UEFI specification defines the \fINVDIMM Label Protocol\fP as the
combination of label area access methods and a data format for
provisioning one or more NAMESPACE objects from a REGION. Note that
label support is optional and if Linux does not detect the label
capability it will automatically instantiate a "label\-less" namespace
per region. Examples of label\-less namespaces are the ones created by
the kernel\(cqs \fImemmap=ss!nn\fP command line option (see the nvdimm wiki on
kernel.org), or NVDIMMs without a valid \fInamespace index\fP in their label
area.
.sp
A namespace can be provisioned to operate in one of 4 modes, \fIfsdax\fP,
\fIdevdax\fP, \fIsector\fP, and \fIraw\fP. Here are the expected usage models for
these modes:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
fsdax: Filesystem\-DAX mode is the default mode of a namespace
when specifying \fIndctl create\-namespace\fP with no options. It creates
a block device (/dev/pmemX[.Y]) that supports the DAX capabilities
of Linux filesystems (xfs and ext4 to date). DAX removes the page
cache from the I/O path and allows mmap(2) to establish direct
mappings to persistent memory media. The DAX capability enables
workloads / working\-sets that would exceed the capacity of the page
cache to scale up to the capacity of persistent memory. Workloads
that fit in page cache or perform bulk data transfers may not see
benefit from DAX. When in doubt, pick this mode.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
devdax: Device\-DAX mode enables similar mmap(2) DAX mapping
capabilities as Filesystem\-DAX. However, instead of a block\-device
that can support a DAX\-enabled filesystem, this mode emits a single
character device file (/dev/daxX.Y). Use this mode to assign
persistent memory to a virtual\-machine, register persistent memory
for RDMA, or when gigantic mappings are needed.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
sector: Use this mode to host legacy filesystems that do
not checksum metadata or applications that are not prepared for torn
sectors after a crash. Expected usage for this mode is for small
boot volumes. This mode is compatible with other operating systems.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
raw: Raw mode is effectively just a memory disk that does
not support DAX. Typically this indicates a namespace that was
created by tooling or another operating system that did not know how
to create a Linux \fIfsdax\fP or \fIdevdax\fP mode namespace. This mode is
compatible with other operating systems, but again, does not support
DAX operation.
.RE
.sp
ndctl\-inject\-error can be used to ask the platform to simulate media errors
in the NVDIMM address space to aid debugging and development of features
related to error handling.
.sp
By default, injecting an error actually only injects an error to the first \fIn\fP
bytes of the block, where \fIn\fP is the output of ndctl_cmd_ars_cap_get_size().
In other words, we only inject one \fIars_unit\fP per sector. This is sufficient
for Linux to mark the whole sector as bad, and will show up as such in the
various \fIbadblocks\fP lists in the kernel. If multiple blocks are being injected,
only the first \fIn\fP bytes of each block specified will be injected as errors.
This can be overridden by the \-\-saturate option, which will force the entire
block to be injected as an error.
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Warning
.ps -1
.br
.sp
These commands are DANGEROUS and can cause data loss. They are
only provided for testing and debugging purposes.
.sp .5v
.RE
.SH "EXAMPLES"
.sp
Inject errors in namespace0.0 at block 12 for 2 blocks (i.e. 12, 13)
.sp
.nf
ndctl inject\-error \-\-block=12 \-\-count=2 namespace0.0
.fi
.br
.sp
Check status of injected errors on namespace0.0
.sp
.nf
ndctl inject\-error \-\-status namespace0.0
.fi
.br
.sp
Uninject errors at block 12 for 2 blocks on namespace0.0
.sp
.nf
ndctl inject\-error \-\-uninject \-\-block=12 \-\-count=2 namespace0.0
.fi
.br
.SH "OPTIONS"
.sp
\-B, \-\-block=
.RS 4
Namespace block offset in 512 byte sized blocks where the error is
to be injected.
.sp
.if n .RS 4
.nf
NOTE: The offset is interpreted in different ways based on the "mode"
of the namespace. For "raw" mode, the offset is the base namespace
offset. For "fsdax" mode (i.e. a "pfn" namespace), the offset is
relative to the user\-visible part of the namespace, and the offset
introduced by the kernel\(aqs metadata will be accounted for. For a
"sector" mode namespace (i.e. a "BTT" namespace), the offset is
relative to the base namespace, as the BTT translation details are
internal to the kernel, and can\(aqt be accounted for while injecting
errors.
.fi
.if n .RE
.RE
.sp
\-n, \-\-count=
.RS 4
Number of blocks to inject as errors. This is also in terms of fixed,
512 byte blocks.
.RE
.sp
\-d, \-\-uninject
.RS 4
This option will ask the platform to remove any injected errors for the
specified block offset, and count.
.sp
.if n .RS 4
.nf
WARNING: This will not clear the kernel\(aqs internal badblock tracking,
those can only be cleared by doing a write to the affected locations.
Hence use the \-\-clear option only if you know exactly what you are
doing. For normal usage, injected errors should only be cleared by
doing writes. Do not expect have the original data intact after
injecting an error, and clearing it using \-\-clear \- it will be lost,
as the only "real" way to clear the error location is to write to it
or zero it (truncate/hole\-punch).
.fi
.if n .RE
.RE
.sp
\-t, \-\-status
.RS 4
This option will retrieve the status of injected errors. Note that
this will not retrieve all known/latent errors (i.e. non injected
ones), and is NOT equivalent to performing an Address Range Scrub.
.RE
.sp
\-N, \-\-no\-notify
.RS 4
This option is only valid when injecting errors. By default, the error
inject command and will ask platform firmware to trigger a notification
in the kernel, asking it to update its state of known errors.
With this option, the error will still be injected, the kernel will not
get a notification, and the error will appear as a latent media error
when the location is accessed. If the platform firmware does not
support this feature, this will have no effect.
.RE
.sp
\-S, \-\-saturate
.RS 4
This option forces error injection or un\-injection to cover the entire
address range covered by the specified block(s).
.RE
.sp
\-v, \-\-verbose
.RS 4
Emit debug messages for the error injection process
.RE
.sp
\-u, \-\-human
.RS 4
Format numbers representing storage sizes, or offsets as human
readable strings with units instead of the default machine\-friendly
raw\-integer data. Convert other numeric fields into hexadecimal strings.
.RE
.sp
\-r, \-\-region=
.RS 4
.sp
.if n .RS 4
.nf
A \(aqregionX\(aq device name, or a region id number. The keyword \(aqall\(aq can
be specified to carry out the operation on every region in the system,
optionally filtered by bus id (see \-\-bus= option).
.fi
.if n .RE
.RE
.sp
\-b, \-\-bus=
.RS 4
Enforce that the operation only be carried on devices that are
attached to the given bus. Where \fIbus\fP can be a provider name or a bus
id number.
.RE
.SH "COPYRIGHT"
.sp
Copyright (c) 2016 \- 2019, Intel Corporation. License GPLv2: GNU GPL
version 2 \c
.URL "http://gnu.org/licenses/gpl.html" "" "."
This is free software:
you are free to change and redistribute it.  There is NO WARRANTY, to
the extent permitted by law.
.SH "SEE ALSO"
.sp
ndctl\-list(1),