'\" t
.\"     Title: flatpak build-commit-from
.\"    Author: Alexander Larsson <alexl@redhat.com>
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 03/29/2019
.\"    Manual: flatpak build-commit-from
.\"    Source: flatpak
.\"  Language: English
.\"
.TH "FLATPAK BUILD\-COMMI" "1" "" "flatpak" "flatpak build-commit-from"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
flatpak-build-commit-from \- Create new commits based on existing one (possibly from another repository)
.SH "SYNOPSIS"
.HP \w'\fBflatpak\ build\-commit\-from\fR\ 'u
\fBflatpak build\-commit\-from\fR [OPTION...] DST\-REPO DST\-REF...
.SH "DESCRIPTION"
.PP
Creates new commits on the
DST\-REF
branch in the
DST\-REPO, with the contents (and most of the metadata) taken from another branch, either from another repo, or from another branch in the same repository\&.
.PP
The collection ID set on
DST\-REPO
(if set) will be used for the newly created commits\&.
.PP
This command is very useful when you want to maintain a branch with a clean history that has no unsigned or broken commits\&. For instance, you can import the head from a different repository from an automatic builder when you\*(Aqve verified that it worked\&. The new commit will have no parents or signatures from the autobuilder, and can be properly signed with the official key\&.
.PP
Any deltas that affect the original commit and that match parent commits in the destination repository are copied and rewritten for the new commit id\&.
.SH "OPTIONS"
.PP
The following options are understood:
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Show help options and exit\&.
.RE
.PP
\fB\-\-src\-repo=SRC\-REPO\fR
.RS 4
The (local) repository to pull the source branch from\&. Defaults to the destination repository\&.
.RE
.PP
\fB\-\-src\-ref=SRC\-REF\fR
.RS 4
The branch to use as the source for the new commit\&. Defaults to the same as the destination ref, which is useful only if a different source repo has been specified\&.
.RE
.PP
\fB\-\-extra\-collection\-id=COLLECTION\-ID\fR
.RS 4
Add an extra collection\-ref binding for this collection, in addition to whatever would normally be added due to the destination repository collection id\&. This option can be used multiple times\&.
.RE
.PP
\fB\-\-untrusted\fR
.RS 4
The source repostory is not trusted, all objects are copied (not hardlinked) and all checksums are verified\&.
.RE
.PP
\fB\-s\fR, \fB\-\-subject=SUBJECT\fR
.RS 4
One line subject for the commit message\&. If not specified, will be taken from the source commit\&.
.RE
.PP
\fB\-b\fR, \fB\-\-body=BODY\fR
.RS 4
Full description for the commit message\&. If not specified, will be taken from the source commit\&.
.RE
.PP
\fB\-\-update\-appstream\fR
.RS 4
Update the appstream branch after the build\&.
.RE
.PP
\fB\-\-no\-update\-summary\fR
.RS 4
Don\*(Aqt update the summary file after the new commit is added\&. This means the repository will not be useful for serving over http until build\-update\-repo has been run\&. This is useful is you want to do multiple repo operations before finally updating the summary\&.
.RE
.PP
\fB\-\-force\fR
.RS 4
Create new commit even if the content didn\*(Aqt change from the existing branch head\&.
.RE
.PP
\fB\-\-disable\-fsync\fR
.RS 4
Don\*(Aqt fsync when writing to the repository\&. This can result in data loss in exceptional situations, but can improve performance when working with temporary or test repositories\&.
.RE
.PP
\fB\-\-gpg\-sign=KEYID\fR
.RS 4
Sign the commit with this GPG key\&. This option can be used multiple times\&.
.RE
.PP
\fB\-\-gpg\-homedir=PATH\fR
.RS 4
GPG Homedir to use when looking for keyrings
.RE
.PP
\fB\-\-end\-of\-life=REASON\fR
.RS 4
Mark build as end\-of\-life
.RE
.PP
\fB\-\-timestamp=TIMESTAMP\fR
.RS 4
Override the timestamp of the commit\&. Use an ISO 8601 formatted date, or NOW for the current time
.RE
.PP
\fB\-\-disable\-fsync\fR
.RS 4
Don\*(Aqt fsync when writing to the repository\&. This can result in data loss in exceptional situations, but can improve performance when working with temporary or test repositories\&.
.RE
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
Print debug information during command processing\&.
.RE
.PP
\fB\-\-ostree\-verbose\fR
.RS 4
Print OSTree debug information during command processing\&.
.RE
.SH "EXAMPLES"
.PP
To revert a commit to the commit before:
.PP
\fB$ flatpak build\-commit\-from \-\-timestamp=NOW \-\-src\-ref=app/org\&.gnome\&.gedit/x86_64/master^ repo app/org\&.gnome\&.gedit/x86_64/master\fR
.SH "SEE ALSO"
.PP
\fBostree\fR(1),
\fBflatpak\fR(1),
\fBflatpak-build-init\fR(1),
\fBflatpak-build\fR(1),
\fBflatpak-build-finish\fR(1),
\fBflatpak-build-sign\fR(1),
\fBflatpak-build-update-repo\fR(1)
