." Text automatically generated by txt2man
.TH thin_check 8 "Device Mapper Tools" "System Manager's Manual"
.SH NAME
\fBthin_check \fP- validates thin provisioning metadata on a device or file
\fB
.SH SYNOPSIS
.nf
.fam C
\fBthin_check\fP [\fIoptions\fP] {device|file}
.fam T
.fi
.SH DESCRIPTION
\fBthin_check\fP checks thin provisioning metadata created by the device-mapper
thin provisioning target on a device or file.
.PP
The tool cannot be run on live metadata.
.SH OPTIONS
.TP
.B
\fB-q\fP, \fB--quiet\fP
Suppress output messages, return only exit code.
.TP
.B
\fB-h\fP, \fB--help\fP
Print help and exit.
.TP
.B
\fB-V\fP, \fB--version\fP
Output version information and exit.
.TP
.B
\fB--super-block-only\fP
Only check the superblock.
.TP
.B
\fB--skip-mappings\fP
Skip checking of the block mappings which make up the bulk of the metadata.
.TP
.B
\fB--ignore-non-fatal-errors\fP
Will only return a non-zero exit code if it finds a fatal error.
.PP
.nf
.fam C
    An example of a nonfatal error is an incorrect data block reference count
    causing a block to be considered allocated when it in fact isn't.  Ignoring
    errors for a long time is not advised, you really should be using
    thin_repair to fix them.

.fam T
.fi
.TP
.B
\fB--clear-needs-check-flag\fP
Clears the 'needs_check' flag in the superblock.
.PP
.nf
.fam C
    The kernel may set a flag to force the pool to be checked before it's next
    activated.  Set this switch to clear the flag if the check is successful.
    If the metadata check failed, the flag is not cleared and a thin_repair run
    is needed to fix any issues. After thin_repair succeeded, you may run
    thin_check again.

.fam T
.fi
.TP
.B
\fB--override-mapping-root\fP <block>
Specify a mapping root to use.
.PP
.nf
.fam C
    Don't use this.  This overrides what's specified in the superblock.  Only
    use this if you really understand the metadata format and are trying to
    recover damaged metadata.

.fam T
.fi
.SH EXAMPLE
Analyses thin provisioning metadata on logical volume /dev/vg/metadata:
.PP
.nf
.fam C
    $ thin_check /dev/vg/metadata

.fam T
.fi
The device must not be actively used by the target when running.
.SH DIAGNOSTICS
\fBthin_check\fP returns an exit code of 0 for success or 1 for error.
.SH SEE ALSO
\fBthin_dump\fP(8), \fBthin_repair\fP(8), \fBthin_restore\fP(8), \fBthin_rmap\fP(8), \fBthin_metadata_size\fP(8)
.SH AUTHOR
Joe Thornber <ejt@redhat.com>, Heinz Mauelshagen <heinzm@redhat.com>
