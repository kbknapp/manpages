'\" t
.\"     Title: daxctl-list
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 1.5.8
.\"      Date: 2019-03-18
.\"    Manual: daxctl Manual
.\"    Source: daxctl
.\"  Language: English
.\"
.TH "DAXCTL\-LIST" "1" "2019-03-18" "daxctl" "daxctl Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
daxctl\-list \- dump the platform Device\-DAX regions, devices, and attributes in json.
.SH "SYNOPSIS"
.sp
.nf
\fIdaxctl list\fP [<options>]
.fi
.br
.sp
Walk all the device\-dax\-regions in the system and list all device
instances along with some of their major attributes.
.sp
Options can be specified to limit the output to objects of a certain
class.  Where the classes are regions or devices.  By default, \fIdaxctl
list\fP with no options is equivalent to:
.sp
.nf
daxctl list \-\-devices
.fi
.br
.SH "EXAMPLE"
.sp
.if n .RS 4
.nf
# daxctl list \-\-regions \-\-devices

{
  "id":1,
  "devices":[
    {
      "chardev":"dax1.0",
      "size":3233808384
    }
  ]
}
.fi
.if n .RE
.SH "OPTIONS"
.sp
\-r, \-\-region=
.RS 4
A device\-dax region is a contiguous range of memory that
hosts one or more /dev/daxX.Y devices, where X is the region id
and Y is the device instance id. The keyword \fIall\fP can be
specified to carry out the operation on every region in the
system.
.RE
.sp
\-d, \-\-dev=
.RS 4
Specify a dax device name, <region id>.<instance id>
tuple, or keyword \fIall\fP to filter the listing. For
example to list the first device instance in region1:
.RE
.sp
.if n .RS 4
.nf
# daxctl list \-\-dev=1.0

{
  "chardev":"dax1.0",
  "size":3233808384
}
.fi
.if n .RE
.sp
\-D, \-\-devices
.RS 4
Include device\-dax instance info in the listing (default)
.RE
.sp
\-R, \-\-regions
.RS 4
Include region info in the listing
.RE
.sp
\-i, \-\-idle
.RS 4
Include idle (not enabled / zero\-sized) devices in the listing
.RE
.sp
\-u, \-\-human
.RS 4
By default \fIdaxctl list\fP will output machine\-friendly raw\-integer
data. Instead, with this flag, numbers representing storage size
will be formatted as human readable strings with units, other
fields are converted to hexadecimal strings.  Example:
.RE
.sp
.if n .RS 4
.nf
# daxctl list
{
  "chardev":"dax1.0",
  "size":32828817408
}

# daxctl list \-\-human
{
  "chardev":"dax1.0",
  "size":"30.57 GiB (32.83 GB)"
}
.fi
.if n .RE
.SH "COPYRIGHT"
.sp
Copyright (c) 2016 \- 2019, Intel Corporation. License GPLv2: GNU GPL
version 2 \c
.URL "http://gnu.org/licenses/gpl.html" "" "."
This is free software:
you are free to change and redistribute it.  There is NO WARRANTY, to
the extent permitted by law.